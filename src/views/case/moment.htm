<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
    <title></title>
     <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/moment@2.24.0/moment.min.js"></script>
    <style>
    .flex, .flex dt, .flex dd {
        width:100%;
        display: block;
        padding:0px;
        margin:0px;
    }
    .flex.f-col{
        flex-flow: column;
    }
    .flex.f-row{
        flex-flow: row;
    }

    dl.flex {
        display: flex;
    }
    
    .flex dt 
    {
        flex:0;
    }
    
    .flex dd
    {
        flex:1;
    }
    textarea{
        width:100%;
        height:15em;
    }
    pre{
        width:100%;
        height:100%;
        background:yellow;
        margin-top:.5em;
        overflow-y:auto;
    }
    ul {
        list-style-type:none;
        margin:0;
        padding:.3em;
    }
    li {
        min-width:5em;
        line-height:1.3em;
        white-space:nowrap;
    }
    li:hover{
        color:blue;
        font-weight:400;
        cursor:pointer;
    }
 
    </style>
</head>
<body class="CSBody">
    <div id="App">
        <dl class="flex f-row">
            <dt>
                <ul>
                    <li v-for="(item,key) in list"><a @click="exec(key)"> {{key}}</a></li>
                </ul>
            </dt>
            <dd style="height:95vh ;" >
                <dl class="flex f-col">
                    <dt>
                        <input type="button" value="Action" @click="act" />
                        <textarea v-model="code"> </textarea>
                    </dt>
                    <dd>
                        <pre>{{result}}</pre>
                    </dd>
                </dl>
            </dd>

        </dl>
 
    </div>
    
    <script>
        var test = {
            'format'(){
                let Now = moment();
                let arr = [
                    'YYYYMMDD',
                    'hhmmss'
                ]
                let r  = {Now};
                for(var idx in arr){
                    let _f = arr[idx];
                    r[_f] = Now.format(_f)
                }
                return r;
            }, 
            'moment utc'(){
                return moment.utc('20190101').toDate();
            },
            '取得日期起迄時間-utc,day'(){
                return [moment.utc('2019/01/01').startOf('day').toDate()
                    ,moment.utc('2019/01/01').endOf('day').toDate()];

            },
            '取得日期起迄時間-week'(){
                let _day = moment('2019/02/01','yyyy/MM/dd');
                let _unit = 'Week';
                let _offsetDay = _day.subtract(1,`${_unit}s`);
                let timeStart = _offsetDay.startOf(_unit).clone();
                let timeEnd = _offsetDay.endOf(_unit).clone();
                return [timeStart,timeEnd];
            },
            '檢核日期'(){ 
                return moment('2019/01/01','yyyyMMdd').isValid();
            },
            '取得日期起迄時間-準 la 時區'(){
                let _day = moment('2019/02/01',"America/Los_Angeles");
                    let _unit = 'day';
                    let _offsetDay = _day;//.utcOffset(0);//.subtract(0,`${_unit}s`);
                    let timeStart = _offsetDay.startOf(_unit).clone();
                    let timeEnd = _offsetDay.endOf(_unit).clone();
                return [timeStart,timeEnd];
            },
            '取得起迄日期時間差'(){
                const startDate = moment('2017-01-01');
                const endDate = moment('2018-01-01');
                // 計算兩者差異年數
                let r = {
                    years:endDate.diff(startDate, 'years'),
                    days:endDate.diff(startDate, 'days')
                }
                return r;
            },
            '取得上週區間和天數'(){
                let _OP = {
                    date_s:moment().startOf('week').subtract('week',1),
                    date_e:moment().endOf('week').subtract('week',1)
                }
                //moment.diff 預設 是將取得的天數做 無條件捨位, 必須設 true 取得 天數的浮點值
                let _days = _OP.date_e.diff(_OP.date_s,'days',true);
                console.log(_days)
                //再用無條件進位,才能抓到正確的天數
                _OP.days = Math.ceil(_days);
                return _OP ;
            },
            '取得時間差的精確值'(){
                //需搭配 npm install moment-precise-range-plugin
                return moment("2014-01-01 12:00:00").preciseDiff("2015-03-04 16:05:06");
            },
        }
        
        new Vue({
            el: "#App",
            data() {
                return {
                    list: test,
                    result:'test',
                    code:'',
                }
            },
            methods: {
                exec(key) {
                    let _fn = this.list[key];
                    var _reg = new RegExp(`(\'|\"|)${key}(\'|\"|)`);
                    this.code =  _fn.toString().replace(_reg,'function');
                    this.result = JSON.stringify(_fn(), undefined, 4);
                },
                act(){
                    let x = eval(`(${this.code})()`);
                    this.result = x;
                }
            }
        })
    </script>
</body>
</html>